name: build
on:
  push:
    branches: ['main']

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
#          - dockerfile: ./ng-forward-proxy/Dockerfile
#            image: easzlab/ng-forward-proxy
#            tag: 1.22.1-20230227
#            ctx: ./ng-forward-proxy/
#          - dockerfile: ./cfssl-utils/Dockerfile
#            image: easzlab/cfssl-utils
#            tag: v1.6.3
#            ctx: ./cfssl-utils/
#          - dockerfile: ./tshooter/Dockerfile
#            image: easzlab/tshooter
#            tag: v1.0.2
#            ctx: ./tshooter/
          - dockerfile: ./client-utils/Dockerfile
            image: easzlab/client-utils
            tag: v1.0.0-20251019
            ctx: ./client-utils/
#          - dockerfile: ./ng-http-proxy/Dockerfile
#            image: easzlab/ng-http-proxy
#            tag: v1.1.0
#            ctx: ./ng-http-proxy/
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }} 
          tags: ${{ matrix.tag }} 

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.ctx }}
          file: ${{ matrix.dockerfile }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          push: true
